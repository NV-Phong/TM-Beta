// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Task_Manager_Beta.Data;

#nullable disable

namespace Task_Manager_Beta.Migrations
{
    [DbContext(typeof(TaskManagerContext))]
    [Migration("20240405112111_AddAllTables")]
    partial class AddAllTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Task_Manager_Beta.Data.Assignment", b =>
                {
                    b.Property<int>("Iduser")
                        .HasColumnType("int")
                        .HasColumnName("IDUser");

                    b.Property<int>("Idtask")
                        .HasColumnType("int")
                        .HasColumnName("IDTask");

                    b.Property<int>("Idassignment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDAssignment");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idassignment"));

                    b.HasKey("Iduser", "Idtask")
                        .HasName("PK__ASSIGNME__612AE3C08133FCF6");

                    b.HasIndex("Idtask");

                    b.ToTable("ASSIGNMENT", (string)null);
                });

            modelBuilder.Entity("Task_Manager_Beta.Data.Condition", b =>
                {
                    b.Property<int>("Idcondition")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDCondition");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idcondition"));

                    b.Property<int>("Idpermission")
                        .HasColumnType("int")
                        .HasColumnName("IDPermission");

                    b.Property<int>("Idworkflow")
                        .HasColumnType("int")
                        .HasColumnName("IDWorkflow");

                    b.HasKey("Idcondition")
                        .HasName("PK__CONDITIO__452B4D93285C0699");

                    b.HasIndex("Idpermission");

                    b.HasIndex("Idworkflow");

                    b.ToTable("CONDITION", (string)null);
                });

            modelBuilder.Entity("Task_Manager_Beta.Data.Member", b =>
                {
                    b.Property<int>("Idmember")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDMember");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idmember"));

                    b.Property<int>("Idproject")
                        .HasColumnType("int")
                        .HasColumnName("IDProject");

                    b.Property<int>("Iduser")
                        .HasColumnType("int")
                        .HasColumnName("IDUser");

                    b.HasKey("Idmember")
                        .HasName("PK__MEMBER__7EB75A63D92FB36D");

                    b.HasIndex("Idproject");

                    b.HasIndex("Iduser");

                    b.ToTable("MEMBER", (string)null);
                });

            modelBuilder.Entity("Task_Manager_Beta.Data.Permisssion", b =>
                {
                    b.Property<int>("Idpermission")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDPermission");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idpermission"));

                    b.Property<int>("Idproject")
                        .HasColumnType("int")
                        .HasColumnName("IDProject");

                    b.Property<int>("Iduser")
                        .HasColumnType("int")
                        .HasColumnName("IDUser");

                    b.Property<string>("Object")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Privilege")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Idpermission")
                        .HasName("PK__PERMISSS__0553C49AB4E77293");

                    b.HasIndex("Idproject");

                    b.HasIndex("Iduser");

                    b.ToTable("PERMISSSION", (string)null);
                });

            modelBuilder.Entity("Task_Manager_Beta.Data.Project", b =>
                {
                    b.Property<int>("Idproject")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDProject");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idproject"));

                    b.Property<DateTime?>("DayCreate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Hide")
                        .HasColumnType("int");

                    b.Property<int?>("Idleader")
                        .HasColumnType("int")
                        .HasColumnName("IDLeader");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Idproject")
                        .HasName("PK__PROJECT__B0529955CFDF06BE");

                    b.ToTable("PROJECT", (string)null);
                });

            modelBuilder.Entity("Task_Manager_Beta.Data.Status", b =>
                {
                    b.Property<int>("Idstatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDStatus");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idstatus"));

                    b.Property<string>("StatusName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Idstatus")
                        .HasName("PK__STATUS__8DA245106739C773");

                    b.HasIndex(new[] { "StatusName" }, "UQ__STATUS__05E7698A81D61DE0")
                        .IsUnique()
                        .HasFilter("[StatusName] IS NOT NULL");

                    b.ToTable("STATUS", (string)null);
                });

            modelBuilder.Entity("Task_Manager_Beta.Data.Task", b =>
                {
                    b.Property<int>("Idtask")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDTask");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idtask"));

                    b.Property<DateTime?>("DayCreate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DayStart")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Deadline")
                        .HasColumnType("datetime");

                    b.Property<int?>("Hide")
                        .HasColumnType("int");

                    b.Property<int>("Idproject")
                        .HasColumnType("int")
                        .HasColumnName("IDProject");

                    b.Property<int>("Idstatus")
                        .HasColumnType("int")
                        .HasColumnName("IDStatus");

                    b.Property<string>("TaskName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Idtask")
                        .HasName("PK__TASK__BCC3A1F92D2AF717");

                    b.HasIndex("Idproject");

                    b.HasIndex("Idstatus");

                    b.ToTable("TASK", (string)null);
                });

            modelBuilder.Entity("Task_Manager_Beta.Data.Taskdetail", b =>
                {
                    b.Property<int>("Idtask")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDTask");

                    b.Property<string>("Attachments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Idtask")
                        .HasName("PK__TASKDETA__BCC3A1F9F0F81026");

                    b.ToTable("TASKDETAILS", (string)null);
                });

            modelBuilder.Entity("Task_Manager_Beta.Data.Template", b =>
                {
                    b.Property<int>("Idtemplate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDTemplate");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idtemplate"));

                    b.Property<int>("Idproject")
                        .HasColumnType("int")
                        .HasColumnName("IDProject");

                    b.Property<int>("Idstatus")
                        .HasColumnType("int")
                        .HasColumnName("IDStatus");

                    b.HasKey("Idtemplate")
                        .HasName("PK__TEMPLATE__AB4388EFDD927C1E");

                    b.HasIndex("Idproject");

                    b.HasIndex("Idstatus");

                    b.ToTable("TEMPLATE", (string)null);
                });

            modelBuilder.Entity("Task_Manager_Beta.Data.User", b =>
                {
                    b.Property<int>("Iduser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDUser");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Iduser"));

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Hide")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Iduser")
                        .HasName("PK__USER__EAE6D9DF10325B4D");

                    b.ToTable("USER", (string)null);
                });

            modelBuilder.Entity("Task_Manager_Beta.Data.Workflow", b =>
                {
                    b.Property<int>("Idworkflow")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDWorkflow");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idworkflow"));

                    b.Property<int>("Idstatus")
                        .HasColumnType("int")
                        .HasColumnName("IDStatus");

                    b.Property<string>("Transition")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Idworkflow")
                        .HasName("PK__WORKFLOW__7D45E40AA14ADF65");

                    b.HasIndex("Idstatus");

                    b.ToTable("WORKFLOW", (string)null);
                });

            modelBuilder.Entity("Task_Manager_Beta.Data.Assignment", b =>
                {
                    b.HasOne("Task_Manager_Beta.Data.Task", "IdtaskNavigation")
                        .WithMany("Assignments")
                        .HasForeignKey("Idtask")
                        .IsRequired()
                        .HasConstraintName("FK__ASSIGNMEN__IDTas__6383C8BA");

                    b.HasOne("Task_Manager_Beta.Data.User", "IduserNavigation")
                        .WithMany("Assignments")
                        .HasForeignKey("Iduser")
                        .IsRequired()
                        .HasConstraintName("FK__ASSIGNMEN__IDUse__628FA481");

                    b.Navigation("IdtaskNavigation");

                    b.Navigation("IduserNavigation");
                });

            modelBuilder.Entity("Task_Manager_Beta.Data.Condition", b =>
                {
                    b.HasOne("Task_Manager_Beta.Data.Permisssion", "IdpermissionNavigation")
                        .WithMany("Conditions")
                        .HasForeignKey("Idpermission")
                        .IsRequired()
                        .HasConstraintName("FK__CONDITION__IDPer__6754599E");

                    b.HasOne("Task_Manager_Beta.Data.Workflow", "IdworkflowNavigation")
                        .WithMany("Conditions")
                        .HasForeignKey("Idworkflow")
                        .IsRequired()
                        .HasConstraintName("FK__CONDITION__IDWor__68487DD7");

                    b.Navigation("IdpermissionNavigation");

                    b.Navigation("IdworkflowNavigation");
                });

            modelBuilder.Entity("Task_Manager_Beta.Data.Member", b =>
                {
                    b.HasOne("Task_Manager_Beta.Data.Project", "IdprojectNavigation")
                        .WithMany("Members")
                        .HasForeignKey("Idproject")
                        .IsRequired()
                        .HasConstraintName("FK__MEMBER__IDProjec__619B8048");

                    b.HasOne("Task_Manager_Beta.Data.User", "IduserNavigation")
                        .WithMany("Members")
                        .HasForeignKey("Iduser")
                        .IsRequired()
                        .HasConstraintName("FK__MEMBER__IDUser__60A75C0F");

                    b.Navigation("IdprojectNavigation");

                    b.Navigation("IduserNavigation");
                });

            modelBuilder.Entity("Task_Manager_Beta.Data.Permisssion", b =>
                {
                    b.HasOne("Task_Manager_Beta.Data.Project", "IdprojectNavigation")
                        .WithMany("Permisssions")
                        .HasForeignKey("Idproject")
                        .IsRequired()
                        .HasConstraintName("FK__PERMISSSI__IDPro__656C112C");

                    b.HasOne("Task_Manager_Beta.Data.User", "IduserNavigation")
                        .WithMany("Permisssions")
                        .HasForeignKey("Iduser")
                        .IsRequired()
                        .HasConstraintName("FK__PERMISSSI__IDUse__6477ECF3");

                    b.Navigation("IdprojectNavigation");

                    b.Navigation("IduserNavigation");
                });

            modelBuilder.Entity("Task_Manager_Beta.Data.Task", b =>
                {
                    b.HasOne("Task_Manager_Beta.Data.Project", "IdprojectNavigation")
                        .WithMany("Tasks")
                        .HasForeignKey("Idproject")
                        .IsRequired()
                        .HasConstraintName("FK__TASK__IDProject__5DCAEF64");

                    b.HasOne("Task_Manager_Beta.Data.Status", "IdstatusNavigation")
                        .WithMany("Tasks")
                        .HasForeignKey("Idstatus")
                        .IsRequired()
                        .HasConstraintName("FK__TASK__IDStatus__5EBF139D");

                    b.Navigation("IdprojectNavigation");

                    b.Navigation("IdstatusNavigation");
                });

            modelBuilder.Entity("Task_Manager_Beta.Data.Taskdetail", b =>
                {
                    b.HasOne("Task_Manager_Beta.Data.Task", "IdtaskNavigation")
                        .WithOne("Taskdetail")
                        .HasForeignKey("Task_Manager_Beta.Data.Taskdetail", "Idtask")
                        .IsRequired()
                        .HasConstraintName("FK__TASKDETAI__IDTas__5FB337D6");

                    b.Navigation("IdtaskNavigation");
                });

            modelBuilder.Entity("Task_Manager_Beta.Data.Template", b =>
                {
                    b.HasOne("Task_Manager_Beta.Data.Project", "IdprojectNavigation")
                        .WithMany("Templates")
                        .HasForeignKey("Idproject")
                        .IsRequired()
                        .HasConstraintName("FK__TEMPLATE__IDProj__693CA210");

                    b.HasOne("Task_Manager_Beta.Data.Status", "IdstatusNavigation")
                        .WithMany("Templates")
                        .HasForeignKey("Idstatus")
                        .IsRequired()
                        .HasConstraintName("FK__TEMPLATE__IDStat__6A30C649");

                    b.Navigation("IdprojectNavigation");

                    b.Navigation("IdstatusNavigation");
                });

            modelBuilder.Entity("Task_Manager_Beta.Data.Workflow", b =>
                {
                    b.HasOne("Task_Manager_Beta.Data.Status", "IdstatusNavigation")
                        .WithMany("Workflows")
                        .HasForeignKey("Idstatus")
                        .IsRequired()
                        .HasConstraintName("FK__WORKFLOW__IDStat__66603565");

                    b.Navigation("IdstatusNavigation");
                });

            modelBuilder.Entity("Task_Manager_Beta.Data.Permisssion", b =>
                {
                    b.Navigation("Conditions");
                });

            modelBuilder.Entity("Task_Manager_Beta.Data.Project", b =>
                {
                    b.Navigation("Members");

                    b.Navigation("Permisssions");

                    b.Navigation("Tasks");

                    b.Navigation("Templates");
                });

            modelBuilder.Entity("Task_Manager_Beta.Data.Status", b =>
                {
                    b.Navigation("Tasks");

                    b.Navigation("Templates");

                    b.Navigation("Workflows");
                });

            modelBuilder.Entity("Task_Manager_Beta.Data.Task", b =>
                {
                    b.Navigation("Assignments");

                    b.Navigation("Taskdetail");
                });

            modelBuilder.Entity("Task_Manager_Beta.Data.User", b =>
                {
                    b.Navigation("Assignments");

                    b.Navigation("Members");

                    b.Navigation("Permisssions");
                });

            modelBuilder.Entity("Task_Manager_Beta.Data.Workflow", b =>
                {
                    b.Navigation("Conditions");
                });
#pragma warning restore 612, 618
        }
    }
}
